"""
Arquivo de inicializa√ß√£o para facilitar imports no projeto
"""

# Facilitar imports dos m√≥dulos principais
from src.exploratory_analysis import ExploratoryDataAnalysis
from src.data_cleaning import DataCleaner
from src.feature_engineering import FeatureEngineer

# Configura√ß√µes principais
__version__ = "0.0.1"
__author__ = "Thalles Felipe, Leonardo de Souza, Ian Martins"
__description__ = "Sistema de Predi√ß√£o de Readmiss√£o Hospitalar Diab√©tica"

# Fun√ß√µes de conveni√™ncia
def run_complete_pipeline():
    """Executa o pipeline completo de processamento"""
    from main_pipeline import main
    return main()

def load_processed_data():
    """Carrega dados j√° processados"""
    import pandas as pd
    import os
    
    data_dir = "data"
    try:
        X_train = pd.read_csv(os.path.join(data_dir, "X_train.csv"))
        X_test = pd.read_csv(os.path.join(data_dir, "X_test.csv"))
        y_train = pd.read_csv(os.path.join(data_dir, "y_train.csv"))["target"]
        y_test = pd.read_csv(os.path.join(data_dir, "y_test.csv"))["target"]
        
        print(f"‚úÖ Dados carregados com sucesso!")
        print(f"Treino: {X_train.shape[0]} amostras, {X_train.shape[1]} features")
        print(f"Teste: {X_test.shape[0]} amostras, {X_test.shape[1]} features")
        
        return X_train, X_test, y_train, y_test
    except FileNotFoundError:
        print("‚ùå Dados processados n√£o encontrados. Execute o pipeline primeiro:")
        print("python main_pipeline.py")
        return None

# Informa√ß√µes do projeto
def project_info():
    """Exibe informa√ß√µes sobre o projeto"""
    print("="*60)
    print("üè• SISTEMA DE PREDI√á√ÉO DE READMISS√ÉO HOSPITALAR DIAB√âTICA")
    print("="*60)
    print(f"Vers√£o: {__version__}")
    print(f"Descri√ß√£o: {__description__}")
    print()
    print("üìã M√≥dulos Dispon√≠veis:")
    print("‚Ä¢ ExploratoryDataAnalysis - An√°lise explorat√≥ria completa")
    print("‚Ä¢ DataCleaner - Pipeline de limpeza de dados")
    print("‚Ä¢ FeatureEngineer - Engenharia de features para ML")
    print()
    print("üöÄ Fun√ß√µes de Conveni√™ncia:")
    print("‚Ä¢ run_complete_pipeline() - Executa pipeline completo")
    print("‚Ä¢ load_processed_data() - Carrega dados processados")
    print("‚Ä¢ project_info() - Mostra estas informa√ß√µes")
    print()
    print("üìÅ Arquivos Principais:")
    print("‚Ä¢ main_pipeline.py - Script principal")
    print("‚Ä¢ notebooks/diabetic_readmission_analysis.ipynb - An√°lise interativa")
    print("‚Ä¢ README.md - Documenta√ß√£o completa")
    print("="*60)

if __name__ == "__main__":
    project_info()
